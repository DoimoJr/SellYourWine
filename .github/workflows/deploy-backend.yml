name: Deploy Backend

on:
  push:
    branches: [main]
    paths:
      - 'apps/backend/**'
      - 'packages/shared/**'
      - 'pnpm-workspace.yaml'
      - 'package.json'
      - 'turbo.json'
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9.0.0'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: 🚀 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 🗄️ Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build shared package
        run: pnpm turbo run build --filter=@sellyourwine/shared

      - name: 🗄️ Generate Prisma Client
        run: pnpm turbo run db:generate --filter=@sellyourwine/backend

      - name: 🏗️ Build backend
        run: pnpm turbo run build --filter=@sellyourwine/backend

      - name: 🧪 Run tests
        run: pnpm turbo run test --filter=@sellyourwine/backend || echo "No tests found"

      - name: 🚀 Deploy to Railway
        if: success()
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          echo "Backend deployment would happen here"
          echo "Railway CLI deployment or Docker push to registry"
          # npx @railway/cli deploy --service backend
          
      - name: 📊 Report deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Backend deployment successful"
          else
            echo "❌ Backend deployment failed"
          fi